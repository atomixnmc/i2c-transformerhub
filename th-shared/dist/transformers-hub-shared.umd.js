(function(n,d){typeof exports=="object"&&typeof module<"u"?d(exports):typeof define=="function"&&define.amd?define(["exports"],d):(n=typeof globalThis<"u"?globalThis:n||self,d(n.TransformersHubShared={}))})(this,function(n){"use strict";var vt=Object.defineProperty;var Et=(n,d,m)=>d in n?vt(n,d,{enumerable:!0,configurable:!0,writable:!0,value:m}):n[d]=m;var o=(n,d,m)=>Et(n,typeof d!="symbol"?d+"":d,m);class d{constructor(){o(this,"nodeTypes");this.nodeTypes=new Map}registerNodeType(s,t){return this.nodeTypes.set(s,t),this}createNode(s,t,e,r={}){const c=this.nodeTypes.get(s);if(!c)throw new Error(`Node type ${s} not registered`);return new c(t,e,r)}getNodeTypes(){return Array.from(this.nodeTypes.keys())}hasNodeType(s){return this.nodeTypes.has(s)}}class m{constructor(){o(this,"nodes");o(this,"connections");o(this,"context");o(this,"status");o(this,"error");o(this,"executionQueue");o(this,"executedNodes");o(this,"pauseRequested");o(this,"onStatusChange");o(this,"onNodeStatusChange");o(this,"onExecutionComplete");this.nodes=new Map,this.connections=[],this.context={},this.status="idle",this.error=null,this.executionQueue=[],this.executedNodes=new Set,this.pauseRequested=!1,this.onStatusChange=null,this.onNodeStatusChange=null,this.onExecutionComplete=null}registerNode(s){if(!s.id)throw new Error("Node must have an id");if(this.nodes.set(s.id,s),this.onNodeStatusChange){const t=s.status;s.status=e=>{typeof t=="function"&&t.call(s,e),this.onNodeStatusChange(s.id,e)}}return this}registerNodes(s){if(!Array.isArray(s))throw new Error("Nodes must be an array");for(const t of s)this.registerNode(t);return this}removeNode(s){if(!this.nodes.has(s))throw new Error(`Node with id ${s} not found`);return this.nodes.delete(s),this.connections=this.connections.filter(t=>t.sourceNodeId!==s&&t.targetNodeId!==s),this}addConnection(s,t,e="output",r="data"){if(!this.nodes.has(s))throw new Error(`Source node with id ${s} not found`);if(!this.nodes.has(t))throw new Error(`Target node with id ${t} not found`);return this.connections.push({id:`conn_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,sourceNodeId:s,targetNodeId:t,outputName:e,inputName:r}),this}removeConnection(s){const t=this.connections.findIndex(e=>e.id===s);if(t===-1)throw new Error(`Connection with id ${s} not found`);return this.connections.splice(t,1),this}setContext(s,t){return this.context[s]=t,this}getContext(s){return this.context[s]}clearContext(){return this.context={},this}findSourceNodes(){const s=new Set(this.connections.map(t=>t.targetNodeId));return Array.from(this.nodes.keys()).filter(t=>!s.has(t))}findReadyNodes(s){const t=[];for(const[e,r]of this.nodes.entries()){if(s.has(e))continue;this.connections.filter(u=>u.targetNodeId===e).every(u=>s.has(u.sourceNodeId))&&t.push(e)}return t}async executeNode(s,t={}){const e=this.nodes.get(s);if(!e)throw new Error(`Node with id ${s} not found`);try{if(typeof e.load=="function")return await e.load();if(typeof e.process=="function")return await e.process(t);throw new Error(`Node ${s} has no executable method`)}catch(r){throw e.error=r.message,e.status="error",r}}async execute(){if(this.status==="running")throw new Error("Runtime is already running");this.setStatus("running"),this.error=null,this.executedNodes=new Set,this.pauseRequested=!1;try{const s=this.findSourceNodes();if(s.length===0)throw new Error("No source nodes found in the dataflow");for(this.executionQueue=[...s];this.executionQueue.length>0&&!this.pauseRequested;){const e=this.executionQueue.shift(),r=this.nodes.get(e);if(!r||this.executedNodes.has(e))continue;const c={},y=this.connections.filter(u=>u.targetNodeId===e);for(const u of y){const g=this.nodes.get(u.sourceNodeId);if(!g)throw new Error(`Source node ${u.sourceNodeId} not found`);const w=u.outputName==="output"?g.output:g[u.outputName];c[u.inputName]=w}r.status="running";try{const u=await this.executeNode(e,c);r.output=u,r.status="completed",this.executedNodes.add(e);const g=this.connections.filter(p=>p.sourceNodeId===e);for(const p of g)!this.executionQueue.includes(p.targetNodeId)&&!this.executedNodes.has(p.targetNodeId)&&this.executionQueue.push(p.targetNodeId);const w=this.findReadyNodes(this.executedNodes);for(const p of w)!this.executionQueue.includes(p)&&!this.executedNodes.has(p)&&this.executionQueue.push(p)}catch(u){if(r.status="error",r.error=u.message,this.context.strictMode)throw u}}if(this.pauseRequested){this.setStatus("paused");const e={status:"paused",executedNodes:Array.from(this.executedNodes),pendingNodes:this.executionQueue,context:this.context};return this.onExecutionComplete&&this.onExecutionComplete(e),e}this.setStatus("completed");const t={status:"completed",executedNodes:Array.from(this.executedNodes),outputs:{},context:this.context};for(const[e,r]of this.nodes.entries())r.output!==void 0&&(t.outputs[e]=r.output);return this.onExecutionComplete&&this.onExecutionComplete(t),t}catch(s){this.setStatus("error"),this.error=s.message;const t={status:"error",error:s.message,executedNodes:Array.from(this.executedNodes),context:this.context};return this.onExecutionComplete&&this.onExecutionComplete(t),t}}pause(){if(this.status!=="running")throw new Error("Runtime is not running");return this.pauseRequested=!0,this}async resume(){if(this.status!=="paused")throw new Error("Runtime is not paused");return this.pauseRequested=!1,this.execute()}stop(){if(this.status!=="running"&&this.status!=="paused")throw new Error("Runtime is not running or paused");return this.executionQueue=[],this.setStatus("stopped"),this}reset(){this.executionQueue=[],this.executedNodes=new Set,this.pauseRequested=!1,this.error=null,this.setStatus("idle");for(const s of this.nodes.values())s.status="idle",s.error=null,s.output=null,s.inputs&&(s.inputs={});return this}setStatus(s){return this.status=s,this.onStatusChange&&this.onStatusChange(s),this}getState(){const s={};for(const[t,e]of this.nodes.entries())s[t]={id:e.id,alias:e.alias,type:e.type,status:e.status,error:e.error};return{status:this.status,error:this.error,nodes:s,connections:this.connections,context:this.context,executedNodes:Array.from(this.executedNodes),pendingNodes:this.executionQueue}}loadDefinition(s){if(this.reset(),this.nodes.clear(),this.connections=[],s.context&&(this.context={...s.context}),s.nodes&&Array.isArray(s.nodes))for(const t of s.nodes){const e={id:t.id,alias:t.alias||t.id,type:t.type,status:"idle",error:null,output:null,...t.properties};this.nodes.set(e.id,e)}return s.connections&&Array.isArray(s.connections)&&(this.connections=[...s.connections]),this}exportDefinition(){const s=[];for(const[t,e]of this.nodes.entries()){const r={id:e.id,alias:e.alias,type:e.type,properties:{}};for(const[c,y]of Object.entries(e))["id","alias","type","status","error","output","inputs"].includes(c)||(r.properties[c]=y);s.push(r)}return{nodes:s,connections:this.connections,context:this.context,name:"Flow Definition",description:"Exported flow definition"}}}class x{constructor(s){o(this,"storage");this.storage=s}async saveFlow(s,t){const e={...t,id:s,updatedAt:new Date().toISOString()};return e.createdAt||(e.createdAt=e.updatedAt),await this.storage.saveItem(`flow:${s}`,e),e}async getFlow(s){return this.storage.getItem(`flow:${s}`)}async deleteFlow(s){return this.storage.removeItem(`flow:${s}`)}async listFlows(){return(await this.storage.listItems()).filter(t=>t.key.startsWith("flow:")).map(t=>t.value)}async cloneFlow(s,t,e){const r=await this.getFlow(s);if(!r)return null;const c={...r,name:e||`${r.name} (Clone)`,createdAt:void 0,updatedAt:void 0};return this.saveFlow(t,c)}async updateFlow(s,t){const e=await this.getFlow(s);if(!e)return null;const r={...e,...t};return this.saveFlow(s,r)}async flowExists(s){return await this.getFlow(s)!==null}async searchFlows(s){const t=await this.listFlows(),e=s.toLowerCase();return t.filter(r=>r.name.toLowerCase().includes(e)||r.description&&r.description.toLowerCase().includes(e))}getStorage(){return this.storage}setStorage(s){this.storage=s}}class N{constructor(){o(this,"items");this.items=new Map}async saveItem(s,t){return this.items.set(s,t),t}async getItem(s){return this.items.get(s)||null}async removeItem(s){return this.items.delete(s)}async listItems(){return Array.from(this.items.entries()).map(([s,t])=>({key:s,value:t}))}async clear(){this.items.clear()}async size(){return this.items.size}async hasItem(s){return this.items.has(s)}}class a{constructor(s,t){o(this,"id");o(this,"alias");o(this,"type");o(this,"inputs");o(this,"output");o(this,"status");o(this,"error");this.id=s,this.alias=t||s,this.type="action",this.inputs={},this.output=null,this.status="idle",this.error=null}setInput(s,t){this.inputs[s]=t}}async function S(i,s,t){const e=[];if(s&&s.required)for(const r of s.required)r in i||e.push(`Missing required field: ${r}`);if(s&&s.properties)for(const[r,c]of Object.entries(s.properties))r in i&&typeof i[r]!==c.type&&e.push(`Field ${r} should be of type ${c.type}`);return{valid:e.length===0,errors:e}}function f(i){return new Promise((s,t)=>{setTimeout(()=>{i?s('{"key": "value", "example": 123}'):t(new Error("File path is empty"))},100)})}class v extends a{constructor(t,e,r={}){super(t,e);o(this,"schema");o(this,"strictMode");this.type="json-validator",this.schema=r.schema||{},this.strictMode=r.strictMode!==!1}async process(t){try{this.status="running";const e=t.data;if(!e)throw new Error("No input data provided");const r=await S(e,this.schema,this.strictMode);if(r.valid)this.output={data:e,valid:!0,errors:[]};else{if(this.strictMode)throw new Error(`JSON validation failed: ${r.errors.join(", ")}`);this.output={data:e,valid:!1,errors:r.errors}}return this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class E extends a{constructor(t,e,r={}){super(t,e);o(this,"script");this.type="custom-script",this.script=r.script||""}async process(t){try{if(this.status="running",!this.script)throw new Error("No script provided");return console.log(`Executing script: ${this.script}`),this.output={result:`Simulated execution of script: ${this.script}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class T extends a{constructor(t,e,r={}){super(t,e);o(this,"command");this.type="ai-command",this.command=r.command||""}async process(t){try{if(this.status="running",!this.command)throw new Error("No AI command provided");return console.log(`Executing AI command: ${this.command}`),this.output={result:`Simulated execution of AI command: ${this.command}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class $ extends a{constructor(t,e,r={}){super(t,e);o(this,"transformationType");this.type="ai-text-transform",this.transformationType=r.transformationType||"default"}async process(t){try{this.status="running";const e=t.text;if(!e)throw new Error("No input text provided");return console.log(`Transforming text with type: ${this.transformationType}`),this.output={result:`Simulated transformation of text: ${e}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class b extends a{constructor(t,e,r={}){super(t,e);o(this,"prompt");this.type="ai-image-gen",this.prompt=r.prompt||""}async process(t){try{if(this.status="running",!this.prompt)throw new Error("No prompt provided for image generation");return console.log(`Generating image with prompt: ${this.prompt}`),this.output={result:`Simulated image generation for prompt: ${this.prompt}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class P extends a{constructor(t,e,r={}){super(t,e);o(this,"prompt");this.type="ai-video-gen",this.prompt=r.prompt||""}async process(t){try{if(this.status="running",!this.prompt)throw new Error("No prompt provided for video generation");return console.log(`Generating video with prompt: ${this.prompt}`),this.output={result:`Simulated video generation for prompt: ${this.prompt}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class C extends a{constructor(t,e,r={}){super(t,e);o(this,"language");this.type="audio-transcribe",this.language=r.language||"en"}async process(t){try{if(this.status="running",!t.audio)throw new Error("No audio input provided");return console.log(`Transcribing audio in language: ${this.language}`),this.output={result:`Simulated transcription of audio in ${this.language}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class F extends a{constructor(s,t){super(s,t),this.type="audio-noise-reduction"}async process(s){try{if(this.status="running",!s.audio)throw new Error("No audio input provided");return console.log("Reducing noise in audio"),this.output={result:"Simulated noise-reduced audio"},this.status="completed",this.output}catch(t){throw this.status="error",this.error=t.message,t}}}class A extends a{constructor(s,t){super(s,t),this.type="audio-mix"}async process(s){try{this.status="running";const t=s.tracks;if(!t||!Array.isArray(t))throw new Error("No audio tracks provided for mixing");return console.log("Mixing audio tracks"),this.output={result:"Simulated mixed audio"},this.status="completed",this.output}catch(t){throw this.status="error",this.error=t.message,t}}}class R extends a{constructor(s,t){super(s,t),this.type="video-compose"}async process(s){try{this.status="running";const t=s.clips;if(!t||!Array.isArray(t))throw new Error("No video clips provided for composition");return console.log("Composing video clips"),this.output={result:"Simulated composed video"},this.status="completed",this.output}catch(t){throw this.status="error",this.error=t.message,t}}}class q extends a{constructor(t,e,r={}){super(t,e);o(this,"apiKey");this.type="youtube-uploader",this.apiKey=r.apiKey||""}async process(t){try{if(this.status="running",!t.video)throw new Error("No video input provided for upload");if(!this.apiKey)throw new Error("No API key provided for YouTube upload");return console.log(`Uploading video to YouTube with API key: ${this.apiKey}`),this.output={result:"Simulated YouTube video upload"},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class I extends a{constructor(t,e,r={}){super(t,e);o(this,"xslt");this.type="xml-transformer",this.xslt=r.xslt||""}async process(t){try{if(this.status="running",!t.xml)throw new Error("No XML input provided");if(!this.xslt)throw new Error("No XSLT provided for transformation");return console.log(`Transforming XML with XSLT: ${this.xslt}`),this.output={result:`Simulated transformation of XML with XSLT: ${this.xslt}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class D extends a{constructor(t,e,r={}){super(t,e);o(this,"format");this.type="video-transcoder",this.format=r.format||"mp4"}async process(t){try{if(this.status="running",!t.video)throw new Error("No video input provided");return console.log(`Transcoding video to format: ${this.format}`),this.output={result:`Simulated transcoded video to format: ${this.format}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class M extends a{constructor(t,e,r={}){super(t,e);o(this,"analysisType");this.type="text-analyzer",this.analysisType=r.analysisType||"sentiment"}async process(t){try{if(this.status="running",!t.text)throw new Error("No text input provided");return console.log(`Analyzing text with type: ${this.analysisType}`),this.output={result:`Simulated text analysis of type: ${this.analysisType}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class k extends a{constructor(t,e,r={}){super(t,e);o(this,"template");this.type="template-renderer",this.template=r.template||""}async process(t){try{this.status="running";const e=t.data;if(!e)throw new Error("No data provided for template rendering");if(!this.template)throw new Error("No template provided");return console.log(`Rendering template with data: ${JSON.stringify(e)}`),this.output={result:`Simulated rendered template with data: ${JSON.stringify(e)}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class L extends a{constructor(t,e,r={}){super(t,e);o(this,"scheduleTime");this.type="scheduler",this.scheduleTime=r.scheduleTime||""}async process(t){try{if(this.status="running",!this.scheduleTime)throw new Error("No schedule time provided");return console.log(`Scheduling task at: ${this.scheduleTime}`),this.output={result:`Simulated task scheduled at: ${this.scheduleTime}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class j extends a{constructor(t,e,r={}){super(t,e);o(this,"notificationConfig");this.type="notification-sender",this.notificationConfig=r.notificationConfig||{}}async process(t){try{if(this.status="running",!t.message)throw new Error("No message provided for notification");return console.log("Sending notification with config:",this.notificationConfig),this.output={result:"Simulated notification sent"},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class Q extends a{constructor(t,e,r={}){super(t,e);o(this,"modelPath");this.type="ml-predictor",this.modelPath=r.modelPath||""}async process(t){try{if(this.status="running",!t.data)throw new Error("No input data provided for prediction");if(!this.modelPath)throw new Error("No model path provided");return console.log(`Making prediction using model at: ${this.modelPath}`),this.output={result:"Simulated ML prediction result"},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class O extends a{constructor(t,e,r={}){super(t,e);o(this,"transformation");this.type="image-processor",this.transformation=r.transformation||"resize"}async process(t){try{if(this.status="running",!t.image)throw new Error("No image input provided");return console.log(`Processing image with transformation: ${this.transformation}`),this.output={result:`Simulated image processing with transformation: ${this.transformation}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class K extends a{constructor(t,e,r={}){super(t,e);o(this,"url");o(this,"method");this.type="http-request",this.url=r.url||"",this.method=r.method||"GET"}async process(t){try{if(this.status="running",!this.url)throw new Error("No URL provided for HTTP request");return console.log(`Making ${this.method} request to URL: ${this.url}`),this.output={result:`Simulated ${this.method} request to ${this.url}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class _ extends a{constructor(t,e,r={}){super(t,e);o(this,"filePath");this.type="file-writer",this.filePath=r.filePath||""}async process(t){try{if(this.status="running",!t.data)throw new Error("No data provided for writing to file");if(!this.filePath)throw new Error("No file path provided");return console.log(`Writing data to file: ${this.filePath}`),this.output={result:`Simulated writing data to file: ${this.filePath}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class G extends a{constructor(t,e,r={}){super(t,e);o(this,"emailConfig");this.type="email-sender",this.emailConfig=r.emailConfig||{}}async process(t){try{if(this.status="running",!t.emailData)throw new Error("No email data provided");return console.log("Sending email with config:",this.emailConfig),this.output={result:"Simulated email sent"},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class U extends a{constructor(t,e,r={}){super(t,e);o(this,"validationRules");this.type="data-validator",this.validationRules=r.validationRules||{}}async process(t){try{if(this.status="running",!t.data)throw new Error("No data provided for validation");if(!this.validationRules)throw new Error("No validation rules provided");return console.log("Validating data with rules:",this.validationRules),this.output={result:"Simulated data validation result"},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class W extends a{constructor(t,e,r={}){super(t,e);o(this,"mappingRules");this.type="data-mapper",this.mappingRules=r.mappingRules||{}}async process(t){try{if(this.status="running",!t.data)throw new Error("No data provided for mapping");if(!this.mappingRules)throw new Error("No mapping rules provided");return console.log("Mapping data with rules:",this.mappingRules),this.output={result:"Simulated mapped data"},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class J extends a{constructor(t,e,r={}){super(t,e);o(this,"joinKey");this.type="data-joiner",this.joinKey=r.joinKey||""}async process(t){try{this.status="running";const e=t.dataSources;if(!e||!Array.isArray(e))throw new Error("No data sources provided for joining");if(!this.joinKey)throw new Error("No join key provided");return console.log(`Joining data sources with key: ${this.joinKey}`),this.output={result:"Simulated joined data"},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class V extends a{constructor(t,e,r={}){super(t,e);o(this,"filterCondition");this.type="data-filter",this.filterCondition=r.filterCondition||""}async process(t){try{this.status="running";const e=t.data;if(!e||!Array.isArray(e))throw new Error("No data provided for filtering");if(!this.filterCondition)throw new Error("No filter condition provided");return console.log(`Filtering data with condition: ${this.filterCondition}`),this.output={result:`Simulated filtered data with condition: ${this.filterCondition}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class z extends a{constructor(t,e,r={}){super(t,e);o(this,"connectionString");this.type="database-writer",this.connectionString=r.connectionString||""}async process(t){try{if(this.status="running",!t.data)throw new Error("No data provided for database writing");if(!this.connectionString)throw new Error("No database connection string provided");return console.log(`Writing data to database with connection string: ${this.connectionString}`),this.output={result:"Simulated database write operation"},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class X extends a{constructor(t,e,r={}){super(t,e);o(this,"aggregationType");this.type="data-aggregator",this.aggregationType=r.aggregationType||"sum"}async process(t){try{this.status="running";const e=t.dataSources;if(!e||!Array.isArray(e))throw new Error("No data sources provided for aggregation");return console.log(`Aggregating data with type: ${this.aggregationType}`),this.output={result:`Simulated data aggregation of type: ${this.aggregationType}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}class B extends a{constructor(t,e,r={}){super(t,e);o(this,"condition");this.type="conditional-branch",this.condition=r.condition||""}async process(t){try{if(this.status="running",!this.condition)throw new Error("No condition provided for branching");console.log(`Evaluating condition: ${this.condition}`);const e=Math.random()>.5?"true":"false";return this.output={result:`Simulated branch: ${e}`},this.status="completed",this.output}catch(e){throw this.status="error",this.error=e.message,e}}}const H=Object.freeze(Object.defineProperty({__proto__:null,AICommand:T,AIImageGen:b,AITextTransform:$,AIVideoGen:P,AudioMix:A,AudioNoiseReduction:F,AudioTranscribe:C,BaseActionNode:a,ConditionalBranch:B,CustomScriptNode:E,DataAggregator:X,DataFilter:V,DataJoiner:J,DataMapper:W,DataValidator:U,DatabaseWriter:z,EmailSender:G,FileWriter:_,HTTPRequest:K,ImageProcessor:O,JSONValidatorNode:v,MLPredictor:Q,NotificationSender:j,Scheduler:L,TemplateRenderer:k,TextAnalyzer:M,VideoCompose:R,VideoTranscoder:D,XMLTransformer:I,YouTubeUploader:q},Symbol.toStringTag,{value:"Module"}));class h{constructor(s,t){o(this,"id");o(this,"alias");o(this,"type");o(this,"data");o(this,"status");o(this,"error");this.id=s,this.alias=t||s,this.type="data",this.data={},this.status="idle",this.error=null}getDataByPath(s){if(!s)return this.data;const t=s.split(".");let e=this.data;for(const r of t){if(e==null)return;e=e[r]}return e}}class Y extends h{constructor(t,e,r={}){super(t,e);o(this,"filePath");o(this,"schema");this.type="json-file",this.filePath=r.filePath||"",this.schema=r.schema||null}async load(){try{if(this.status="running",!this.filePath)throw new Error("File path not specified");const t=await f(this.filePath);return this.data=JSON.parse(t),this.schema,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}}class Z extends h{constructor(t,e,r={}){super(t,e);o(this,"filePath");this.type="xml-file",this.filePath=r.filePath||""}async load(){try{if(this.status="running",!this.filePath)throw new Error("File path not specified");const t=await f(this.filePath);return this.data=t,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}}class tt extends h{constructor(t,e,r={}){super(t,e);o(this,"filePath");o(this,"delimiter");this.type="csv-file",this.filePath=r.filePath||"",this.delimiter=r.delimiter||","}async load(){try{if(this.status="running",!this.filePath)throw new Error("File path not specified");const t=await f(this.filePath);return this.data=t.split(this.delimiter),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}}class et extends h{constructor(t,e,r={}){super(t,e);o(this,"filePath");this.type="video-file",this.filePath=r.filePath||""}async load(){try{if(this.status="running",!this.filePath)throw new Error("File path not specified");const t=await f(this.filePath);return this.data=t,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}}class st extends h{constructor(t,e,r={}){super(t,e);o(this,"filePath");this.type="audio-file",this.filePath=r.filePath||""}async load(){try{if(this.status="running",!this.filePath)throw new Error("File path not specified");const t=await f(this.filePath);return this.data=t,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}}class rt extends h{constructor(t,e,r={}){super(t,e);o(this,"filePath");this.type="image-file",this.filePath=r.filePath||""}async load(){try{if(this.status="running",!this.filePath)throw new Error("File path not specified");const t=await f(this.filePath);return this.data=t,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}}class ot extends h{constructor(t,e,r={}){super(t,e);o(this,"connectionString");o(this,"query");this.type="sql-database",this.connectionString=r.connectionString||"",this.query=r.query||""}async load(){try{if(this.status="running",!this.connectionString||!this.query)throw new Error("Connection string or query not specified");return this.data=await this.simulateQueryExecution(),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateQueryExecution(){return{result:`Simulated result for query: ${this.query}`}}}class it extends h{constructor(t,e,r={}){super(t,e);o(this,"connectionString");o(this,"collection");o(this,"query");this.type="nosql-database",this.connectionString=r.connectionString||"",this.collection=r.collection||"",this.query=r.query||{}}async load(){try{if(this.status="running",!this.connectionString||!this.collection)throw new Error("Connection string or collection not specified");return this.data=await this.simulateQueryExecution(),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateQueryExecution(){return{result:`Simulated result for collection: ${this.collection}`}}}class at extends h{constructor(t,e,r={}){super(t,e);o(this,"url");o(this,"method");o(this,"headers");o(this,"body");this.type="rest-api",this.url=r.url||"",this.method=r.method||"GET",this.headers=r.headers||{},this.body=r.body||null}async load(){try{if(this.status="running",!this.url)throw new Error("URL not specified");const t=await this.simulateAPIRequest();return this.data=t,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateAPIRequest(){return{result:`Simulated response from ${this.url}`}}}class nt extends h{constructor(t,e,r={}){super(t,e);o(this,"url");o(this,"query");o(this,"variables");this.type="graphql-api",this.url=r.url||"",this.query=r.query||"",this.variables=r.parameters||{}}async load(){try{if(this.status="running",!this.url||!this.query)throw new Error("URL or query not specified");const t=await this.simulateGraphQLRequest();return this.data=t,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateGraphQLRequest(){return{result:`Simulated response for query: ${this.query}`}}}class ut extends h{constructor(t,e,r={}){super(t,e);o(this,"url");o(this,"protocol");this.type="websocket",this.url=r.url||"",this.protocol=r.protocol||""}async load(){try{if(this.status="running",!this.url)throw new Error("WebSocket URL not specified");return this.data=await this.simulateWebSocketConnection(),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateWebSocketConnection(){return{result:`Simulated WebSocket connection to ${this.url}`}}}class ht extends h{constructor(t,e,r={}){super(t,e);o(this,"formData");this.type="form-data",this.formData=r.formData||{}}async load(){try{if(this.status="running",!this.formData||Object.keys(this.formData).length===0)throw new Error("Form data not specified");return this.data=await this.simulateFormDataProcessing(),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateFormDataProcessing(){return{result:`Simulated form data: ${JSON.stringify(this.formData)}`}}}class ct extends h{constructor(t,e,r={}){super(t,e);o(this,"url");this.type="rss-feed",this.url=r.url||""}async load(){try{if(this.status="running",!this.url)throw new Error("RSS feed URL not specified");return this.data=await this.simulateRSSFeedFetch(),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateRSSFeedFetch(){return{result:`Simulated RSS feed data from ${this.url}`}}}class dt extends h{constructor(t,e,r={}){super(t,e);o(this,"server");o(this,"username");o(this,"password");o(this,"folder");this.type="email-source",this.server=r.server||"",this.username=r.username||"",this.password=r.password||"",this.folder=r.folder||"INBOX"}async load(){try{if(this.status="running",!this.server||!this.username||!this.password)throw new Error("Email server credentials not specified");return this.data=await this.simulateEmailFetch(),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateEmailFetch(){return{result:`Simulated emails from folder: ${this.folder}`}}}const lt=Object.freeze(Object.defineProperty({__proto__:null,AudioFileNode:st,BaseDataNode:h,CSVFileNode:tt,EmailSourceNode:dt,FormDataNode:ht,GraphQLAPINode:nt,ImageFileNode:rt,JSONFileNode:Y,NoSQLDatabaseNode:it,RESTAPINode:at,RSSFeedNode:ct,SQLDatabaseNode:ot,VideoFileNode:et,WebSocketNode:ut,XMLFileNode:Z},Symbol.toStringTag,{value:"Module"}));class l{constructor(s,t){o(this,"id");o(this,"alias");o(this,"type");o(this,"inputs");o(this,"status");o(this,"error");this.id=s,this.alias=t||s,this.type="sink",this.inputs={},this.status="idle",this.error=null}setInput(s,t){this.inputs[s]=t}}class pt extends l{constructor(s,t){super(s,t),this.type="output-log"}async process(s){try{this.status="running",console.log("OutputLogNode:",s),this.status="completed"}catch(t){throw this.status="error",this.error=t.message,t}}}class mt extends l{constructor(t,e,r={}){super(t,e);o(this,"server");o(this,"username");o(this,"password");o(this,"from");o(this,"to");o(this,"subject");o(this,"isHtml");this.type="send-email",this.server=r.server||"",this.username=r.username||"",this.password=r.password||"",this.from=r.from||"",this.to=r.to||"",this.subject=r.subject||"",this.isHtml=r.isHtml||!1}async process(t){try{this.status="running",console.log(`Simulated email sent to ${this.to}`),this.status="completed"}catch(e){throw this.status="error",this.error=e.message,e}}}class ft extends l{constructor(s,t){super(s,t),this.type="send-push-notification"}async process(s){try{this.status="running",console.log("Simulated push notification:",s),this.status="completed"}catch(t){throw this.status="error",this.error=t.message,t}}}class gt extends l{constructor(s,t){super(s,t),this.type="media-viewer"}async process(s){try{this.status="running",console.log("Simulated media viewer:",s),this.status="completed"}catch(t){throw this.status="error",this.error=t.message,t}}}class yt extends l{constructor(t,e,r={}){super(t,e);o(this,"apiKey");o(this,"videoTitle");o(this,"videoDescription");this.type="upload-to-youtube",this.apiKey=r.apiKey||"",this.videoTitle=r.videoTitle||"",this.videoDescription=r.videoDescription||""}async process(t){try{this.status="running",console.log(`Simulated upload to YouTube: ${this.videoTitle}`),this.status="completed"}catch(e){throw this.status="error",this.error=e.message,e}}}class wt extends l{constructor(s,t){super(s,t),this.type="upload-to-google-drive"}async process(s){try{this.status="running",console.log("Simulated upload to Google Drive:",s),this.status="completed"}catch(t){throw this.status="error",this.error=t.message,t}}}class xt extends l{constructor(t,e,r={}){super(t,e);o(this,"bucketName");o(this,"accessKey");o(this,"secretKey");this.type="upload-to-s3",this.bucketName=r.bucketName||"",this.accessKey=r.accessKey||"",this.secretKey=r.secretKey||""}async process(t){try{this.status="running",console.log(`Simulated upload to S3 bucket: ${this.bucketName}`),this.status="completed"}catch(e){throw this.status="error",this.error=e.message,e}}}class Nt extends l{constructor(t,e,r={}){super(t,e);o(this,"server");o(this,"username");o(this,"password");this.type="upload-to-ftp",this.server=r.server||"",this.username=r.username||"",this.password=r.password||""}async process(t){try{this.status="running",console.log(`Simulated upload to FTP server: ${this.server}`),this.status="completed"}catch(e){throw this.status="error",this.error=e.message,e}}}const St=Object.freeze(Object.defineProperty({__proto__:null,BaseSinkNode:l,MediaViewerNode:gt,OutputLogNode:pt,SendEmailNode:mt,SendPushNotificationNode:ft,UploadFTPNode:Nt,UploadGGDriveNode:wt,UploadS3Node:xt,UploadToYoutubeNode:yt},Symbol.toStringTag,{value:"Module"}));n.FlowManager=x,n.MemoryStorage=N,n.NodeFactory=d,n.Runtime=m,n.actionNodes=H,n.dataSourceNodes=lt,n.sinkNodes=St,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
