(function(n,c){typeof exports=="object"&&typeof module<"u"?c(exports):typeof define=="function"&&define.amd?define(["exports"],c):(n=typeof globalThis<"u"?globalThis:n||self,c(n.TransformersHubShared={}))})(this,function(n){"use strict";var rt=Object.defineProperty;var ot=(n,c,m)=>c in n?rt(n,c,{enumerable:!0,configurable:!0,writable:!0,value:m}):n[c]=m;var o=(n,c,m)=>ot(n,typeof c!="symbol"?c+"":c,m);class c{constructor(){o(this,"nodeTypes");this.nodeTypes=new Map}registerNodeType(e,t){return this.nodeTypes.set(e,t),this}createNode(e,t,s,r={}){const h=this.nodeTypes.get(e);if(!h)throw new Error(`Node type ${e} not registered`);return new h(t,s,r)}getNodeTypes(){return Array.from(this.nodeTypes.keys())}hasNodeType(e){return this.nodeTypes.has(e)}}class m{constructor(){o(this,"nodes");o(this,"connections");o(this,"context");o(this,"status");o(this,"error");o(this,"executionQueue");o(this,"executedNodes");o(this,"pauseRequested");o(this,"onStatusChange");o(this,"onNodeStatusChange");o(this,"onExecutionComplete");this.nodes=new Map,this.connections=[],this.context={},this.status="idle",this.error=null,this.executionQueue=[],this.executedNodes=new Set,this.pauseRequested=!1,this.onStatusChange=null,this.onNodeStatusChange=null,this.onExecutionComplete=null}registerNode(e){if(!e.id)throw new Error("Node must have an id");if(this.nodes.set(e.id,e),this.onNodeStatusChange){const t=e.status;e.status=s=>{typeof t=="function"&&t.call(e,s),this.onNodeStatusChange(e.id,s)}}return this}registerNodes(e){if(!Array.isArray(e))throw new Error("Nodes must be an array");for(const t of e)this.registerNode(t);return this}removeNode(e){if(!this.nodes.has(e))throw new Error(`Node with id ${e} not found`);return this.nodes.delete(e),this.connections=this.connections.filter(t=>t.sourceNodeId!==e&&t.targetNodeId!==e),this}addConnection(e,t,s="output",r="data"){if(!this.nodes.has(e))throw new Error(`Source node with id ${e} not found`);if(!this.nodes.has(t))throw new Error(`Target node with id ${t} not found`);return this.connections.push({id:`conn_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,sourceNodeId:e,targetNodeId:t,outputName:s,inputName:r}),this}removeConnection(e){const t=this.connections.findIndex(s=>s.id===e);if(t===-1)throw new Error(`Connection with id ${e} not found`);return this.connections.splice(t,1),this}setContext(e,t){return this.context[e]=t,this}getContext(e){return this.context[e]}clearContext(){return this.context={},this}findSourceNodes(){const e=new Set(this.connections.map(t=>t.targetNodeId));return Array.from(this.nodes.keys()).filter(t=>!e.has(t))}findReadyNodes(e){const t=[];for(const[s,r]of this.nodes.entries()){if(e.has(s))continue;this.connections.filter(a=>a.targetNodeId===s).every(a=>e.has(a.sourceNodeId))&&t.push(s)}return t}async executeNode(e,t={}){const s=this.nodes.get(e);if(!s)throw new Error(`Node with id ${e} not found`);try{if(typeof s.load=="function")return await s.load();if(typeof s.process=="function")return await s.process(t);throw new Error(`Node ${e} has no executable method`)}catch(r){throw s.error=r.message,s.status="error",r}}async execute(){if(this.status==="running")throw new Error("Runtime is already running");this.setStatus("running"),this.error=null,this.executedNodes=new Set,this.pauseRequested=!1;try{const e=this.findSourceNodes();if(e.length===0)throw new Error("No source nodes found in the dataflow");for(this.executionQueue=[...e];this.executionQueue.length>0&&!this.pauseRequested;){const s=this.executionQueue.shift(),r=this.nodes.get(s);if(!r||this.executedNodes.has(s))continue;const h={},g=this.connections.filter(a=>a.targetNodeId===s);for(const a of g){const y=this.nodes.get(a.sourceNodeId);if(!y)throw new Error(`Source node ${a.sourceNodeId} not found`);const w=a.outputName==="output"?y.output:y[a.outputName];h[a.inputName]=w}r.status="running";try{const a=await this.executeNode(s,h);r.output=a,r.status="completed",this.executedNodes.add(s);const y=this.connections.filter(p=>p.sourceNodeId===s);for(const p of y)!this.executionQueue.includes(p.targetNodeId)&&!this.executedNodes.has(p.targetNodeId)&&this.executionQueue.push(p.targetNodeId);const w=this.findReadyNodes(this.executedNodes);for(const p of w)!this.executionQueue.includes(p)&&!this.executedNodes.has(p)&&this.executionQueue.push(p)}catch(a){if(r.status="error",r.error=a.message,this.context.strictMode)throw a}}if(this.pauseRequested){this.setStatus("paused");const s={status:"paused",executedNodes:Array.from(this.executedNodes),pendingNodes:this.executionQueue,context:this.context};return this.onExecutionComplete&&this.onExecutionComplete(s),s}this.setStatus("completed");const t={status:"completed",executedNodes:Array.from(this.executedNodes),outputs:{},context:this.context};for(const[s,r]of this.nodes.entries())r.output!==void 0&&(t.outputs[s]=r.output);return this.onExecutionComplete&&this.onExecutionComplete(t),t}catch(e){this.setStatus("error"),this.error=e.message;const t={status:"error",error:e.message,executedNodes:Array.from(this.executedNodes),context:this.context};return this.onExecutionComplete&&this.onExecutionComplete(t),t}}pause(){if(this.status!=="running")throw new Error("Runtime is not running");return this.pauseRequested=!0,this}async resume(){if(this.status!=="paused")throw new Error("Runtime is not paused");return this.pauseRequested=!1,this.execute()}stop(){if(this.status!=="running"&&this.status!=="paused")throw new Error("Runtime is not running or paused");return this.executionQueue=[],this.setStatus("stopped"),this}reset(){this.executionQueue=[],this.executedNodes=new Set,this.pauseRequested=!1,this.error=null,this.setStatus("idle");for(const e of this.nodes.values())e.status="idle",e.error=null,e.output=null,e.inputs&&(e.inputs={});return this}setStatus(e){return this.status=e,this.onStatusChange&&this.onStatusChange(e),this}getState(){const e={};for(const[t,s]of this.nodes.entries())e[t]={id:s.id,alias:s.alias,type:s.type,status:s.status,error:s.error};return{status:this.status,error:this.error,nodes:e,connections:this.connections,context:this.context,executedNodes:Array.from(this.executedNodes),pendingNodes:this.executionQueue}}loadDefinition(e){if(this.reset(),this.nodes.clear(),this.connections=[],e.context&&(this.context={...e.context}),e.nodes&&Array.isArray(e.nodes))for(const t of e.nodes){const s={id:t.id,alias:t.alias||t.id,type:t.type,status:"idle",error:null,output:null,...t.properties};this.nodes.set(s.id,s)}return e.connections&&Array.isArray(e.connections)&&(this.connections=[...e.connections]),this}exportDefinition(){const e=[];for(const[t,s]of this.nodes.entries()){const r={id:s.id,alias:s.alias,type:s.type,properties:{}};for(const[h,g]of Object.entries(s))["id","alias","type","status","error","output","inputs"].includes(h)||(r.properties[h]=g);e.push(r)}return{nodes:e,connections:this.connections,context:this.context,name:"Flow Definition",description:"Exported flow definition"}}}class x{constructor(e){o(this,"storage");this.storage=e}async saveFlow(e,t){const s={...t,id:e,updatedAt:new Date().toISOString()};return s.createdAt||(s.createdAt=s.updatedAt),await this.storage.saveItem(`flow:${e}`,s),s}async getFlow(e){return this.storage.getItem(`flow:${e}`)}async deleteFlow(e){return this.storage.removeItem(`flow:${e}`)}async listFlows(){return(await this.storage.listItems()).filter(t=>t.key.startsWith("flow:")).map(t=>t.value)}async cloneFlow(e,t,s){const r=await this.getFlow(e);if(!r)return null;const h={...r,name:s||`${r.name} (Clone)`,createdAt:void 0,updatedAt:void 0};return this.saveFlow(t,h)}async updateFlow(e,t){const s=await this.getFlow(e);if(!s)return null;const r={...s,...t};return this.saveFlow(e,r)}async flowExists(e){return await this.getFlow(e)!==null}async searchFlows(e){const t=await this.listFlows(),s=e.toLowerCase();return t.filter(r=>r.name.toLowerCase().includes(s)||r.description&&r.description.toLowerCase().includes(s))}getStorage(){return this.storage}setStorage(e){this.storage=e}}class N{constructor(){o(this,"items");this.items=new Map}async saveItem(e,t){return this.items.set(e,t),t}async getItem(e){return this.items.get(e)||null}async removeItem(e){return this.items.delete(e)}async listItems(){return Array.from(this.items.entries()).map(([e,t])=>({key:e,value:t}))}async clear(){this.items.clear()}async size(){return this.items.size}async hasItem(e){return this.items.has(e)}}class d{constructor(e,t){o(this,"id");o(this,"alias");o(this,"type");o(this,"inputs");o(this,"output");o(this,"status");o(this,"error");this.id=e,this.alias=t||e,this.type="action",this.inputs={},this.output=null,this.status="idle",this.error=null}setInput(e,t){this.inputs[e]=t}}async function S(i,e,t){const s=[];if(e&&e.required)for(const r of e.required)r in i||s.push(`Missing required field: ${r}`);if(e&&e.properties)for(const[r,h]of Object.entries(e.properties))r in i&&typeof i[r]!==h.type&&s.push(`Field ${r} should be of type ${h.type}`);return{valid:s.length===0,errors:s}}function f(i){return new Promise((e,t)=>{setTimeout(()=>{i?e('{"key": "value", "example": 123}'):t(new Error("File path is empty"))},100)})}class v extends d{constructor(t,s,r={}){super(t,s);o(this,"schema");o(this,"strictMode");this.type="json-validator",this.schema=r.schema||{},this.strictMode=r.strictMode!==!1}async process(t){try{this.status="running";const s=t.data;if(!s)throw new Error("No input data provided");const r=await S(s,this.schema,this.strictMode);if(r.valid)this.output={data:s,valid:!0,errors:[]};else{if(this.strictMode)throw new Error(`JSON validation failed: ${r.errors.join(", ")}`);this.output={data:s,valid:!1,errors:r.errors}}return this.status="completed",this.output}catch(s){throw this.status="error",this.error=s.message,s}}}class E extends d{constructor(t,s,r={}){super(t,s);o(this,"script");this.type="custom-script",this.script=r.script||""}async process(t){try{if(this.status="running",!this.script)throw new Error("No script provided");return console.log(`Executing script: ${this.script}`),this.output={result:`Simulated execution of script: ${this.script}`},this.status="completed",this.output}catch(s){throw this.status="error",this.error=s.message,s}}}class F extends d{constructor(t,s,r={}){super(t,s);o(this,"command");this.type="ai-command",this.command=r.command||""}async process(t){try{if(this.status="running",!this.command)throw new Error("No AI command provided");return console.log(`Executing AI command: ${this.command}`),this.output={result:`Simulated execution of AI command: ${this.command}`},this.status="completed",this.output}catch(s){throw this.status="error",this.error=s.message,s}}}class b extends d{constructor(t,s,r={}){super(t,s);o(this,"transformationType");this.type="ai-text-transform",this.transformationType=r.transformationType||"default"}async process(t){try{this.status="running";const s=t.text;if(!s)throw new Error("No input text provided");return console.log(`Transforming text with type: ${this.transformationType}`),this.output={result:`Simulated transformation of text: ${s}`},this.status="completed",this.output}catch(s){throw this.status="error",this.error=s.message,s}}}class C extends d{constructor(t,s,r={}){super(t,s);o(this,"prompt");this.type="ai-image-gen",this.prompt=r.prompt||""}async process(t){try{if(this.status="running",!this.prompt)throw new Error("No prompt provided for image generation");return console.log(`Generating image with prompt: ${this.prompt}`),this.output={result:`Simulated image generation for prompt: ${this.prompt}`},this.status="completed",this.output}catch(s){throw this.status="error",this.error=s.message,s}}}class P extends d{constructor(t,s,r={}){super(t,s);o(this,"prompt");this.type="ai-video-gen",this.prompt=r.prompt||""}async process(t){try{if(this.status="running",!this.prompt)throw new Error("No prompt provided for video generation");return console.log(`Generating video with prompt: ${this.prompt}`),this.output={result:`Simulated video generation for prompt: ${this.prompt}`},this.status="completed",this.output}catch(s){throw this.status="error",this.error=s.message,s}}}class $ extends d{constructor(t,s,r={}){super(t,s);o(this,"language");this.type="audio-transcribe",this.language=r.language||"en"}async process(t){try{if(this.status="running",!t.audio)throw new Error("No audio input provided");return console.log(`Transcribing audio in language: ${this.language}`),this.output={result:`Simulated transcription of audio in ${this.language}`},this.status="completed",this.output}catch(s){throw this.status="error",this.error=s.message,s}}}class A extends d{constructor(e,t){super(e,t),this.type="audio-noise-reduction"}async process(e){try{if(this.status="running",!e.audio)throw new Error("No audio input provided");return console.log("Reducing noise in audio"),this.output={result:"Simulated noise-reduced audio"},this.status="completed",this.output}catch(t){throw this.status="error",this.error=t.message,t}}}class I extends d{constructor(e,t){super(e,t),this.type="audio-mix"}async process(e){try{this.status="running";const t=e.tracks;if(!t||!Array.isArray(t))throw new Error("No audio tracks provided for mixing");return console.log("Mixing audio tracks"),this.output={result:"Simulated mixed audio"},this.status="completed",this.output}catch(t){throw this.status="error",this.error=t.message,t}}}class T extends d{constructor(e,t){super(e,t),this.type="video-compose"}async process(e){try{this.status="running";const t=e.clips;if(!t||!Array.isArray(t))throw new Error("No video clips provided for composition");return console.log("Composing video clips"),this.output={result:"Simulated composed video"},this.status="completed",this.output}catch(t){throw this.status="error",this.error=t.message,t}}}const q=Object.freeze(Object.defineProperty({__proto__:null,AICommand:F,AIImageGen:C,AITextTransform:b,AIVideoGen:P,AudioMix:I,AudioNoiseReduction:A,AudioTranscribe:$,BaseActionNode:d,CustomScriptNode:E,JSONValidatorNode:v,VideoCompose:T},Symbol.toStringTag,{value:"Module"}));class u{constructor(e,t){o(this,"id");o(this,"alias");o(this,"type");o(this,"data");o(this,"status");o(this,"error");this.id=e,this.alias=t||e,this.type="data",this.data={},this.status="idle",this.error=null}getDataByPath(e){if(!e)return this.data;const t=e.split(".");let s=this.data;for(const r of t){if(s==null)return;s=s[r]}return s}}class R extends u{constructor(t,s,r={}){super(t,s);o(this,"filePath");o(this,"schema");this.type="json-file",this.filePath=r.filePath||"",this.schema=r.schema||null}async load(){try{if(this.status="running",!this.filePath)throw new Error("File path not specified");const t=await f(this.filePath);return this.data=JSON.parse(t),this.schema,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}}class k extends u{constructor(t,s,r={}){super(t,s);o(this,"filePath");this.type="xml-file",this.filePath=r.filePath||""}async load(){try{if(this.status="running",!this.filePath)throw new Error("File path not specified");const t=await f(this.filePath);return this.data=t,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}}class D extends u{constructor(t,s,r={}){super(t,s);o(this,"filePath");o(this,"delimiter");this.type="csv-file",this.filePath=r.filePath||"",this.delimiter=r.delimiter||","}async load(){try{if(this.status="running",!this.filePath)throw new Error("File path not specified");const t=await f(this.filePath);return this.data=t.split(this.delimiter),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}}class M extends u{constructor(t,s,r={}){super(t,s);o(this,"filePath");this.type="video-file",this.filePath=r.filePath||""}async load(){try{if(this.status="running",!this.filePath)throw new Error("File path not specified");const t=await f(this.filePath);return this.data=t,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}}class Q extends u{constructor(t,s,r={}){super(t,s);o(this,"filePath");this.type="audio-file",this.filePath=r.filePath||""}async load(){try{if(this.status="running",!this.filePath)throw new Error("File path not specified");const t=await f(this.filePath);return this.data=t,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}}class O extends u{constructor(t,s,r={}){super(t,s);o(this,"filePath");this.type="image-file",this.filePath=r.filePath||""}async load(){try{if(this.status="running",!this.filePath)throw new Error("File path not specified");const t=await f(this.filePath);return this.data=t,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}}class j extends u{constructor(t,s,r={}){super(t,s);o(this,"connectionString");o(this,"query");this.type="sql-database",this.connectionString=r.connectionString||"",this.query=r.query||""}async load(){try{if(this.status="running",!this.connectionString||!this.query)throw new Error("Connection string or query not specified");return this.data=await this.simulateQueryExecution(),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateQueryExecution(){return{result:`Simulated result for query: ${this.query}`}}}class L extends u{constructor(t,s,r={}){super(t,s);o(this,"connectionString");o(this,"collection");o(this,"query");this.type="nosql-database",this.connectionString=r.connectionString||"",this.collection=r.collection||"",this.query=r.query||{}}async load(){try{if(this.status="running",!this.connectionString||!this.collection)throw new Error("Connection string or collection not specified");return this.data=await this.simulateQueryExecution(),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateQueryExecution(){return{result:`Simulated result for collection: ${this.collection}`}}}class _ extends u{constructor(t,s,r={}){super(t,s);o(this,"url");o(this,"method");o(this,"headers");o(this,"body");this.type="rest-api",this.url=r.url||"",this.method=r.method||"GET",this.headers=r.headers||{},this.body=r.body||null}async load(){try{if(this.status="running",!this.url)throw new Error("URL not specified");const t=await this.simulateAPIRequest();return this.data=t,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateAPIRequest(){return{result:`Simulated response from ${this.url}`}}}class G extends u{constructor(t,s,r={}){super(t,s);o(this,"url");o(this,"query");o(this,"variables");this.type="graphql-api",this.url=r.url||"",this.query=r.query||"",this.variables=r.parameters||{}}async load(){try{if(this.status="running",!this.url||!this.query)throw new Error("URL or query not specified");const t=await this.simulateGraphQLRequest();return this.data=t,this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateGraphQLRequest(){return{result:`Simulated response for query: ${this.query}`}}}class K extends u{constructor(t,s,r={}){super(t,s);o(this,"url");o(this,"protocol");this.type="websocket",this.url=r.url||"",this.protocol=r.protocol||""}async load(){try{if(this.status="running",!this.url)throw new Error("WebSocket URL not specified");return this.data=await this.simulateWebSocketConnection(),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateWebSocketConnection(){return{result:`Simulated WebSocket connection to ${this.url}`}}}class U extends u{constructor(t,s,r={}){super(t,s);o(this,"formData");this.type="form-data",this.formData=r.formData||{}}async load(){try{if(this.status="running",!this.formData||Object.keys(this.formData).length===0)throw new Error("Form data not specified");return this.data=await this.simulateFormDataProcessing(),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateFormDataProcessing(){return{result:`Simulated form data: ${JSON.stringify(this.formData)}`}}}class V extends u{constructor(t,s,r={}){super(t,s);o(this,"url");this.type="rss-feed",this.url=r.url||""}async load(){try{if(this.status="running",!this.url)throw new Error("RSS feed URL not specified");return this.data=await this.simulateRSSFeedFetch(),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateRSSFeedFetch(){return{result:`Simulated RSS feed data from ${this.url}`}}}class W extends u{constructor(t,s,r={}){super(t,s);o(this,"server");o(this,"username");o(this,"password");o(this,"folder");this.type="email-source",this.server=r.server||"",this.username=r.username||"",this.password=r.password||"",this.folder=r.folder||"INBOX"}async load(){try{if(this.status="running",!this.server||!this.username||!this.password)throw new Error("Email server credentials not specified");return this.data=await this.simulateEmailFetch(),this.status="completed",this.data}catch(t){throw this.status="error",this.error=t.message,t}}async simulateEmailFetch(){return{result:`Simulated emails from folder: ${this.folder}`}}}const J=Object.freeze(Object.defineProperty({__proto__:null,AudioFileNode:Q,BaseDataNode:u,CSVFileNode:D,EmailSourceNode:W,FormDataNode:U,GraphQLAPINode:G,ImageFileNode:O,JSONFileNode:R,NoSQLDatabaseNode:L,RESTAPINode:_,RSSFeedNode:V,SQLDatabaseNode:j,VideoFileNode:M,WebSocketNode:K,XMLFileNode:k},Symbol.toStringTag,{value:"Module"}));class l{constructor(e,t){o(this,"id");o(this,"alias");o(this,"type");o(this,"inputs");o(this,"status");o(this,"error");this.id=e,this.alias=t||e,this.type="sink",this.inputs={},this.status="idle",this.error=null}setInput(e,t){this.inputs[e]=t}}class z extends l{constructor(e,t){super(e,t),this.type="output-log"}async process(e){try{this.status="running",console.log("OutputLogNode:",e),this.status="completed"}catch(t){throw this.status="error",this.error=t.message,t}}}class B extends l{constructor(t,s,r={}){super(t,s);o(this,"server");o(this,"username");o(this,"password");o(this,"from");o(this,"to");o(this,"subject");o(this,"isHtml");this.type="send-email",this.server=r.server||"",this.username=r.username||"",this.password=r.password||"",this.from=r.from||"",this.to=r.to||"",this.subject=r.subject||"",this.isHtml=r.isHtml||!1}async process(t){try{this.status="running",console.log(`Simulated email sent to ${this.to}`),this.status="completed"}catch(s){throw this.status="error",this.error=s.message,s}}}class H extends l{constructor(e,t){super(e,t),this.type="send-push-notification"}async process(e){try{this.status="running",console.log("Simulated push notification:",e),this.status="completed"}catch(t){throw this.status="error",this.error=t.message,t}}}class X extends l{constructor(e,t){super(e,t),this.type="media-viewer"}async process(e){try{this.status="running",console.log("Simulated media viewer:",e),this.status="completed"}catch(t){throw this.status="error",this.error=t.message,t}}}class Y extends l{constructor(t,s,r={}){super(t,s);o(this,"apiKey");o(this,"videoTitle");o(this,"videoDescription");this.type="upload-to-youtube",this.apiKey=r.apiKey||"",this.videoTitle=r.videoTitle||"",this.videoDescription=r.videoDescription||""}async process(t){try{this.status="running",console.log(`Simulated upload to YouTube: ${this.videoTitle}`),this.status="completed"}catch(s){throw this.status="error",this.error=s.message,s}}}class Z extends l{constructor(e,t){super(e,t),this.type="upload-to-google-drive"}async process(e){try{this.status="running",console.log("Simulated upload to Google Drive:",e),this.status="completed"}catch(t){throw this.status="error",this.error=t.message,t}}}class tt extends l{constructor(t,s,r={}){super(t,s);o(this,"bucketName");o(this,"accessKey");o(this,"secretKey");this.type="upload-to-s3",this.bucketName=r.bucketName||"",this.accessKey=r.accessKey||"",this.secretKey=r.secretKey||""}async process(t){try{this.status="running",console.log(`Simulated upload to S3 bucket: ${this.bucketName}`),this.status="completed"}catch(s){throw this.status="error",this.error=s.message,s}}}class et extends l{constructor(t,s,r={}){super(t,s);o(this,"server");o(this,"username");o(this,"password");this.type="upload-to-ftp",this.server=r.server||"",this.username=r.username||"",this.password=r.password||""}async process(t){try{this.status="running",console.log(`Simulated upload to FTP server: ${this.server}`),this.status="completed"}catch(s){throw this.status="error",this.error=s.message,s}}}const st=Object.freeze(Object.defineProperty({__proto__:null,BaseSinkNode:l,MediaViewerNode:X,OutputLogNode:z,SendEmailNode:B,SendPushNotificationNode:H,UploadFTPNode:et,UploadGGDriveNode:Z,UploadS3Node:tt,UploadToYoutubeNode:Y},Symbol.toStringTag,{value:"Module"}));n.FlowManager=x,n.MemoryStorage=N,n.NodeFactory=c,n.Runtime=m,n.actionNodes=q,n.dataSourceNodes=J,n.sinkNodes=st,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
